@use './config/constants.scss' as *;
@use './config/colors' as *;
@use './helpers/mixins' as *;
@use './helpers/placeholders' as *;
@use 'sass:math';

* {
  box-sizing: border-box;
}

body {
  font-family: Arial, Helvetica, sans-serif;
  background: var(--clr--primary); /* fallback for old browsers */
  background: linear-gradient(
    to right,
    var(--clr--primary),
    var(--clr--secondary)
  );
  @include flex(center);
  width: 100%;
  min-height: 100vh;
}

.dashboard {
  padding-top: 30px;
  padding-bottom: 30px;
  @include flex() {
    gap: $SPACING;
  }
}

.main {
  width: 500px;
  & > *:not(:last-child) {
    margin-bottom: $SPACING;
  }
}

.board {
  width: 100%;
  min-height: 460px;
  @include flex(center);
}

.game {
  @include flex(space-around, center) {
    flex-wrap: wrap;
    gap: 10px;
  }
}

.card {
  @include size($CARD_SIZE);
  cursor: pointer;
  position: relative;
  .card-front,
  .card-back {
    position: absolute !important;
    border-radius: $RADIUS;
    transition: transform $DELAY cubic-bezier(0.4, 0, 0.2, 1);
    backface-visibility: hidden;
    @include flex(center);
    @include size(100%);
    user-select: none;
    box-shadow: $SHADOW_ONE;
  }
  .card-front {
    background: var(--clr--black);
    @include before('?') {
      font-size: 2.5em;
      color: var(--clr--white);
    }
  }
  .card-back {
    font-size: 2.2em;
    background-color: var(--clr--white);
    transform: rotateY(180deg) rotateZ(50deg);
  }
  &.flipped,
  &.matched {
    pointer-events: none;
    .card-front {
      transform: rotateY(180deg) rotateZ(50deg);
    }
    .card-back {
      transform: rotateY(0) rotateZ(0);
    }
  }
}

.sidebar {
  // min-width: 70px;
  @include flex(space-between, null, column);
  button {
    display: block;
    border: none;
    overflow: hidden;

    cursor: pointer;
    border-radius: $RADIUS_CIRCLE;
    background-color: var(--clr-btn-yellow);
    color: var(--clr-f-2);
    font-size: 1.5rem;
    @include size(50px);
    border: 0 solid var(--clr-btn-red);
    transition: background-color $DELAY, border $DELAY;

    &:hover {
      background-color: var(--clr-btn-red);
    }
    &:not(:last-child) {
      margin-bottom: $SPACING;
    }
    @include before {
      top: 0;
      left: 0;
      transform-origin: top left;
      transform: rotate(45deg);
      background: var(--clr-btn-red);
      height: 4px;
      width: 0;
      box-shadow: $SHADOW_ONE;
      transition: width $DELAY;
    }
    &.disabled {
      border-width: 5px;
      &::before {
        width: 100% * math.sqrt(2);
      }
    }
  }
}

.info {
  .title {
    text-align: center;
    color: var(--clr-btn-yellow);
    text-transform: uppercase;
    font-size: 2em;
  }
  img {
    @include size(300px);
  }
}

.stats {
  width: 100%;
  @include flex(space-between, null);
}

.scoreBoard {
  padding-top: 5px;
  padding-bottom: 5px;
  user-select: none;
  .num,
  .title {
    min-width: 50px;
    margin-inline: auto;
  }
  .num {
    @include min-size(100px, 40px);
    @include flex(center);
    border-radius: $LIGHT_RADIUS;
    font-weight: $FW_BOLD;
    font-size: 26px;
  }
  .title {
    margin-top: 5px;
    text-transform: capitalize;
    display: block;
    text-align: center;
    font-size: 14px;
    color: var(--clr-f-1);
  }
}

.d-none {
  display: none;
}

.parent {
  background-color: var(--clr--bg);
  border-radius: $RADIUS;
  box-shadow: $SHADOW_ONE;
  padding: 15px;
}

.freeze {
  pointer-events: none;
}
